{{- include '_Global.scriban' -}}
namespace {{ root_namespace }}; 


{{- for count in 1..type_parameters_count }}
{{- last_index = count - 1 }}


public static class Archetype<{{ type_parameters_str count }}>
{
    public static readonly Archetype Instance = Archetype.Instance(ComponentTypeSet<{{ type_parameters_str count }}>.Instance);
}
{{- end }}


public partial class Archetype {
{{- for count in 1..type_parameters_count }}
    {{- type_params = type_parameters_str count }}

    public static Archetype Instance<{{ type_params }}>() => Archetype<{{ type_params }}>.Instance;
    public Archetype Add<{{ type_params }}>() => this.Add(ComponentTypeSet<{{ type_params }}>.Instance);
    public Archetype Remove<{{ type_params }}>() => this.Remove(ComponentTypeSet<{{ type_params }}>.Instance);
    public bool Contains<{{ type_params }}>() => this.ComponentTypeSet.Contains(ComponentTypeSet<{{ type_params }}>.Instance);
{{- end }}

}
